openapi: 3.1.0
info:
  title: "Juju Client API"
  summary: Next generation Juju client API draft.
  description: |
    This specification represents early but ongoing design work for a next-generation, RESTful Juju
    client API. It **should not** be used as reference for any currently released version of Juju,
    and is unlikely to be implemented until some time in 2024.

    The source code for this page, and the OpenAPI specification can be found on
    [Github](https://github.com/jnsgruk/juju-api). You can also find a progress tracker that
    indicates which of the prior facade calls have been covered by this design.

    The [OpenAPI Spec](https://github.com/jnsgruk/juju-api/blob/main/openapi.yaml) can be entered
    directly into the [Swagger Editor](https://editor-next.swagger.io/) for a slightly different
    experience when exploring the API if preferable.

    In addition to the new design, there is a [naive
    conversion](https://jnsgruk.github.io/juju-api/generated.html) of the existing Juju facade
    schema available. This was generated from the upstream
    [schema.json](https://github.com/juju/juju/blob/3.3/apiserver/facades/schema.json) and is used
    solely for the purposes of reference, and enables existing schemas to be easily reused during
    the design on the new API where appropriate.
  # termsOfService: http://swagger.io/terms/
  contact:
    email: jon.seager@canonical.com
  license:
    name: AGPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: "1.0"
externalDocs:
  description: Find out more about Juju.
  url: http://juju.is/docs
servers:
  - url: https://localhost:17777/api/v1

tags:
  - name: model
    description: Manage Juju models
    externalDocs:
      description: Find out more about Juju models.
      url: https://juju.is/docs/olm/manage-models

paths:
  /model/{name}:
    get:
      tags:
        - model
      summary: Get a specific model.
      description: |
        Returns detailed information about a given model
      operationId: getModel
      parameters:
        - $ref: "#/components/parameters/ModelName"
      responses:
        "200":
          description: Detailed information about the requested model.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelDetail"
        "404":
          description: Model not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    delete:
      tags:
        - model
      summary: Delete a model.
      description: |
        Delete a model from the controller.
      operationId: deleteModel
      parameters:
        - $ref: "#/components/parameters/ModelName"
        - $ref: "#/components/parameters/DestroyStorage"
        - $ref: "#/components/parameters/Force"
        - $ref: "#/components/parameters/MaxWait"
        - $ref: "#/components/parameters/Timeout"
      responses:
        "200":
          description: Model deleted.
        "404":
          description: Model not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /model/{name}/status:
    get:
      tags:
        - model
      summary: Get the status of a specific model.
      description: |
        Returns status information about a model, such as applications deployed and machines.
      operationId: getModelStatus
      parameters:
        - $ref: "#/components/parameters/ModelName"
      responses:
        "200":
          description: Status information about the requested model.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelStatus"
        "404":
          description: Model not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models:
    get:
      tags:
        - model
      summary: List models
      description: |
        Returns the models that the specified user has access to in the current server.
        
        Controller admins (superuser) can list models for any user. 
        
        Other users can only ask about their own models.
      operationId: listModels
      parameters:
        - name: user
          in: query
          description: The user to list models for (administrative users only)
          required: false
          schema: 
            type: string
        - name: all
          in: query
          description: Lists all models, regardless of user accessibility (administrative users only)
          required: false
          schema: 
            type: string
            default: false
            enum:
              - true
              - false
        - name: detailed
          in: query
          description: Return detailed model summaries with more information.
          required: false
          schema: 
            type: string
            default: false
            enum:
              - true
              - false
      responses:
        "200":
          description: List of models the specified user has access to.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserModelList"
    
    post:
      tags:
        - model
      summary: Create a new model
      description: Creates a new model using the account and model config specified in the args.
      operationId: createModel
      requestBody:
        description: Model creation parameters.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelCreateArgs"
        required: true
      responses:
        "201":
          description: Model created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelDetail"
  
  /models/defaults:
    get:
      tags:
        - model
      summary: List model defaults.
      description: |
        Returns the model defaults for the specified clouds.
      operationId: listModelDefaults
      parameters:
        - name: clouds
          in: query
          description: The clouds for which to fetch the model defaults.
          required: false
          schema: 
            type: array
            items:
              type: string
      responses:
        "200":
          description: List of model defaults for the specified clouds.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelDefaultsList"
    
    patch:
      tags:
        - model
      summary: Update model defaults.
      description: |
        Set or unset model defaults for the specified cloud.

        Model default configuration settings are specific to the cloud on which the model is
        deployed. If the controller hosts more than one cloud, the cloud (and optionally region)
        must be specified
      operationId: updateModelDefaults
      parameters:
        - name: cloud
          in: query
          description: The cloud for which to update the model defaults.
          required: false
          schema: 
            type: array
            items:
              type: string
        - name: cloud-region
          in: query
          description: The cloud region for which to update the model defaults.
          required: false
          schema: 
            type: array
            items:
              type: string
      requestBody:
        description: An object describing those model details to set or unset
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelDefaultsUpdate"
        required: true
      responses:
        "200":
          description: List of model defaults for the specified cloud.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelDefaultsList"
        "400":
          description: Controller hosts more than one cloud but no cloud was specified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        info:
          type: object
          additionalProperties: true
          # patternProperties:
          #   .*:
          #     type: object
          #     additionalProperties: true
        message:
          type: string
      additionalProperties: false
      required:
      - message
      - code
    MachineHardware:
      type: object
      properties:
        arch:
          type: string
        availability-zone:
          type: string
        cores:
          type: integer
        cpu-power:
          type: integer
        mem:
          type: integer
        root-disk:
          type: integer
        tags:
          type: array
          items:
            type: string
        virt-type:
          type: string
      additionalProperties: false
    Model:
      description: Detailed information about a given model.
      allOf:
      - $ref: '#/components/schemas/ModelSummary'
      - type: object
        properties:
          agent-version:
            $ref: '#/components/schemas/Version'
          cloud-credential:
            description: Identifier for the model's cloud credential.
            type: string
          cloud-region:
            type: string
          cloud:
            description: Identifier for the model's cloud.
            type: string
          controller-uuid:
            type: string
          counts:
            type: array
            items:
              $ref: '#/components/schemas/ModelEntityCount'
          default-series:
            type: string
          is-controller:
            type: boolean
          life:
            type: string
          migration:
            $ref: '#/components/schemas/ModelMigrationStatus'
          provider-type:
            type: string
          sla:
            $ref: '#/components/schemas/ModelSLAInfo'
          user-access:
            type: string
        additionalProperties: false
        required:
        - controller-uuid
        - is-controller
        - cloud
        - life
        - user-access
        - counts
        - sla
        - agent-version
    ModelApplicationInfo:
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
      required:
      - name
    ModelCreateArgs:
      type: object
      properties:
        cloud:
          description: Identifier of the cloud on which to create the model.
          type: string
        config:
          description: The configuration of the new model.
          type: object
          additionalProperties: true
        credential:
          description: The credential to use when creating the new model.
          type: string
        name:
          description: The name of the new model.
          type: string
        owner:
          description: Identifier of the owner of the new model.
          type: string
        region:
          description: Identifier of the cloud region in which to create the model.
          type: string
      additionalProperties: false
      required:
      - name
      - owner
    ModelDefaultsList:
      description: A list of model defaults for the specified clouds
      type: object
      properties:
        model-defaults:
          type: array
          items:
            $ref: '#/components/schemas/ModelDefaults'
      additionalProperties: false
      required:
        - model-defaults
    ModelDefaults:
      description: Model defaults for a given cloud.
      type: object
      properties:
        controller:
          type: object
          additionalProperties: true
        default:
          type: object
          additionalProperties: true
        regions:
          type: array
          items:
            $ref: '#/components/schemas/RegionDefaults'
      additionalProperties: false
    ModelDetail:
      description: Detailed administrative information about a model
      allOf:
      - $ref: '#/components/schemas/Model'
      - type: object
        properties:
          cloud-credential-validity:
            type: boolean
          default-base:
            type: string
          machines:
            type: array
            items:
              $ref: '#/components/schemas/ModelMachine'
          secret-backends:
            type: array
            items:
              $ref: '#/components/schemas/SecretBackend'
          supported-features:
            type: array
            items:
              $ref: '#/components/schemas/SupportedFeature'
          users:
            type: array
            items:
              $ref: '#/components/schemas/ModelUserInfo'
        additionalProperties: false
        required:
        - users
        - machines
        - secret-backends
    ModelEntityCount:
      type: object
      properties:
        count:
          type: integer
        entity:
          type: string
      additionalProperties: false
      required:
      - entity
      - count
    ModelFilesystemInfo:
      description: Represents a filesystem within the model.
      allOf:
        - $ref: "#/components/schemas/ModelStorageAttributes"
    ModelMachine:
      type: object
      properties:
        display-name:
          type: string
        ha-primary:
          type: boolean
        hardware:
          $ref: '#/components/schemas/MachineHardware'
        has-vote:
          type: boolean
        id:
          type: string
        instance-id:
          type: string
        message:
          type: string
        status:
          type: string
        wants-vote:
          type: boolean
      additionalProperties: false
      required:
      - id 
    ModelMigrationStatus:
      description: Status information about a model migration, including start and finish time.
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        status:
          type: string
      additionalProperties: false
      required:
      - status
      - start
    ModelSLAInfo:
      type: object
      properties:
        level:
          type: string
        owner:
          type: string
      additionalProperties: false
      required:
      - level
      - owner
    ModelStatus:
      type: object
      properties:
        application-count:
          type: integer
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ModelApplicationInfo'
        error:
          $ref: '#/components/schemas/Error'
        filesystems:
          type: array
          items:
            $ref: '#/components/schemas/ModelFilesystemInfo'
        hosted-machine-count:
          type: integer
        life:
          type: string
        machines:
          type: array
          items:
            $ref: '#/components/schemas/ModelMachine'
        model:
          description: Identifier of the model.
          type: string
        owner:
          description: Identifier of the model's owner.
          type: string
        type:
          type: string
        unit-count:
          type: integer
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/ModelVolumeInfo'
      additionalProperties: false
      required:
      - model
      - life
      - type
      - hosted-machine-count
      - application-count
      - unit-count
      - owner
    ModelStorageAttributes:
      type: object
      properties:
        detachable:
          type: boolean
        id:
          type: string
        message:
          type: string
        provider-id:
          type: string
        status:
          type: string
      additionalProperties: false
      required:
      - id
    ModelSummary:
      type: object
      description: Basic identifying information about a given model.
      properties:
        name:
          type: string
        owner:
          description: Identifier of the model's owner.
          type: string
        type:
          type: string
        uuid:
          type: string
      additionalProperties: false
      required:
      - name
      - uuid
      - type
      - owner
    ModelUserInfo:
      type: object
      properties:
        access:
          type: string
        display-name:
          type: string
        last-connection:
          type: string
          format: date-time
        model:
          description: Identifier of the model.
          type: string
        user:
          type: string
      additionalProperties: false
      required:
      - model
      - user
      - display-name
      - last-connection
      - access
    ModelVolumeInfo:
      description: Represents a volume within the model
      allOf:
        - $ref: "#/components/schemas/ModelStorageAttributes"
    RegionDefaults:
      type: object
      properties:
        region-name:
          type: string
        value:
          type: object
          additionalProperties: true
      additionalProperties: false
      required:
      - region-name
      - value
    SecretBackend:
      type: object
      properties:
        backend-type:
          type: string
        config:
          type: object
          additionalProperties: true
          # patternProperties:
          #   .*:
          #     type: object
          #     additionalProperties: true
        name:
          type: string
        token-rotate-interval:
          type: integer
      additionalProperties: false
      required:
      - name
      - backend-type
      - config
    ModelDefaultsUpdate:
      type: object
      properties:
        set:
          description: Key/value pairs representing model defaults to set for the specified cloud.
          type: object
        unset:
          description: Key/value pairs representing model defaults to unset for the specified cloud.
          type: object
      additionalProperties: false
      required:
        - set
        - unset
    SupportedFeature:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        version:
          type: string
      additionalProperties: false
      required:
      - name
      - description
    UserModel:
      description: A model that a given user has access to.
      type: object
      properties:
        last-connection:
          type: string
          format: date-time
        model:
          oneOf:
            - $ref: '#/components/schemas/ModelSummary'
            - $ref: '#/components/schemas/Model'
      additionalProperties: false
      required:
        - model
        - last-connection
    UserModelList:
      description: A list of models that a given user has access to.
      type: object
      properties:
        user-models:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
      additionalProperties: false
      required:
        - user-models
    Version:
      type: object
      properties:
        Build:
          type: integer
        Major:
          type: integer
        Minor:
          type: integer
        Patch:
          type: integer
        Tag:
          type: string
      additionalProperties: false
      required:
      - Major
      - Minor
      - Tag
      - Patch
      - Build

  parameters:
    ModelName:
      in: path
      name: name
      required: true
      description: The name of a model in the controller.
      schema: 
        type: string
    DestroyStorage:
      in: query
      name: destroy-storage
      required: false
      schema:
        type: boolean
    Force:
      in: query
      name: force
      required: false
      schema:
        type: boolean
    MaxWait:
      in: query
      name: max-wait
      required: false
      schema:
        type: integer
    Timeout:
      in: query
      name: max-wait
      required: false
      schema:
        type: integer
  
  
  # Use this section to define reusable objects
  # callbacks: {}
  # examples: {}
  # headers: {}
  # links: {}
  # pathItems: {}
  # requestBodies: {}
  # responses: {}
  # securitySchemes: {}

